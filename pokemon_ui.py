# Form implementation generated from reading ui file 'pokemon_buttons.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import pokemon_class_dict 

pokemon_dict = (pokemon_class_dict.pokemon_dict)

class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(1094, 788)


                
                self.pokemon_dict = pokemon_class_dict.pokemon_dict

                self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
                self.centralwidget.setObjectName("centralwidget")

                #Look up Pokemon Type Button I need to pass the connections argument so I have to make it
                #Maybe?
                self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton.setGeometry(QtCore.QRect(350, 500, 351, 61))
                self.pushButton.setObjectName("pushButton")
                self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.OpenHandCursor))
                self.pushButton.setMouseTracking(True)
                self.pushButton.clicked.connect(self.lookup_pokemon_types)


                self.pushButton_2 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_2.setGeometry(QtCore.QRect(560, 90, 75, 24))
                self.pushButton_2.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(201, 199, 202);\n"
                "    color: white;\n"
                "}")
                self.pushButton_2.setCheckable(True)
                self.pushButton_2.setObjectName("pushButton_2")
                

                #Fire Attack
                
                self.pushButton_3 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_3.setGeometry(QtCore.QRect(660, 90, 75, 24))
                self.pushButton_3.setStyleSheet("QPushButton {\n"
                "    background-color: red;\n"
                "    color: white;\n"
                "}")
                self.pushButton_3.setCheckable(True)
                
                self.pushButton_3.setObjectName("pushButton_3")
                
                #????Fix add??????? Understand
                # self.pushButton_3.clicked.connect(lambda: self.pokemon_attackings("Fire"))


                self.pushButton_4 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_4.setGeometry(QtCore.QRect(960, 90, 75, 24))
                self.pushButton_4.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(255, 222, 58);\n"
                "    color: white;\n"
                "}")
                self.pushButton_4.setCheckable(True)
                self.pushButton_4.setObjectName("pushButton_4")
                self.pushButton_5 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_5.setGeometry(QtCore.QRect(760, 90, 75, 24))
                self.pushButton_5.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(53, 245, 255);\n"
                "    color: white;\n"
                "}")
                self.pushButton_5.setCheckable(True)
                self.pushButton_5.setObjectName("pushButton_5")
                # self.pushButton_5.clicked.connect(lambda: self.pokemon_attackings("Ice"))

                self.pushButton_6 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_6.setGeometry(QtCore.QRect(620, 230, 75, 24))
                self.pushButton_6.setStyleSheet("QPushButton {\n"
                "    background-color:    rgb(103, 106, 127)   ;\n"
                "    color: white;\n"
                "}")
                self.pushButton_6.setCheckable(True)
                self.pushButton_6.setObjectName("pushButton_6")
                self.pushButton_7 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_7.setGeometry(QtCore.QRect(960, 140, 75, 24))
                self.pushButton_7.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(160, 28, 255);\n"
                "    color: white;\n"
                "}")
                self.pushButton_7.setCheckable(True)
                self.pushButton_7.setObjectName("pushButton_7")
                self.pushButton_8 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_8.setGeometry(QtCore.QRect(960, 180, 75, 24))
                self.pushButton_8.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(170, 170, 0);\n"
                "    color: white;\n"
                "}")
                self.pushButton_8.setCheckable(True)
                self.pushButton_8.setObjectName("pushButton_8")
                self.pushButton_9 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_9.setGeometry(QtCore.QRect(860, 90, 75, 24))
                self.pushButton_9.setStyleSheet("QPushButton {\n"
                "    background-color: blue;\n"
                "    color: white;\n"
                "}")
                self.pushButton_9.setCheckable(True)
                self.pushButton_9.setObjectName("pushButton_9")
                self.pushButton_10 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_10.setGeometry(QtCore.QRect(660, 180, 75, 24))
                self.pushButton_10.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(44, 65, 255);\n"
                "    color: white;\n"
                "}")
                self.pushButton_10.setCheckable(True)
                self.pushButton_10.setObjectName("pushButton_10")
                self.pushButton_11 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_11.setGeometry(QtCore.QRect(860, 230, 75, 24))
                self.pushButton_11.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(255, 103, 235) ;\n"
                "    color: white;\n"
                "}")
                self.pushButton_11.setCheckable(True)
                self.pushButton_11.setObjectName("pushButton_11")
                self.pushButton_12 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_12.setGeometry(QtCore.QRect(560, 140, 75, 24))
                self.pushButton_12.setStyleSheet("QPushButton {\n"
                "    background-color: green;\n"
                "    color: white;\n"
                "}")
                self.pushButton_12.setCheckable(True)
                self.pushButton_12.setObjectName("pushButton_12")
                self.pushButton_13 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_13.setGeometry(QtCore.QRect(860, 140, 75, 24))
                self.pushButton_13.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(255, 93, 12);\n"
                "    color: white;\n"
                "}")
                self.pushButton_13.setCheckable(True)
                self.pushButton_13.setObjectName("pushButton_13")
                self.pushButton_15 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_15.setGeometry(QtCore.QRect(750, 230, 75, 24))
                self.pushButton_15.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(134, 67, 0);\n"
                "    color: white;\n"
                "}")
                self.pushButton_15.setCheckable(True)
                self.pushButton_15.setObjectName("pushButton_15")
                self.pushButton_16 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_16.setGeometry(QtCore.QRect(760, 180, 75, 24))
                self.pushButton_16.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(255, 28, 96);\n"
                "    color: white;\n"
                "}")
                self.pushButton_16.setCheckable(True)
                self.pushButton_16.setObjectName("pushButton_16")
                self.pushButton_17 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_17.setGeometry(QtCore.QRect(760, 140, 75, 24))
                self.pushButton_17.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(89, 169, 255);\n"
                "    color: white;\n"
                "}")
                self.pushButton_17.setCheckable(True)
                self.pushButton_17.setObjectName("pushButton_17")
                self.pushButton_14 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_14.setGeometry(QtCore.QRect(560, 180, 75, 24))
                self.pushButton_14.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(202, 166, 74) ;\n"
                "    color: white;\n"
                "}")
                self.pushButton_14.setCheckable(True)
                self.pushButton_14.setObjectName("pushButton_14")
                self.pushButton_18 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_18.setGeometry(QtCore.QRect(660, 140, 75, 24))
                self.pushButton_18.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(202, 142, 21);\n"
                "    color: white;\n"
                "}")
                self.pushButton_18.setCheckable(True)
                self.pushButton_18.setObjectName("pushButton_18")
                self.pushButton_19 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_19.setGeometry(QtCore.QRect(860, 180, 75, 24))
                self.pushButton_19.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(122, 96, 255) ;\n"
                "    color: white;\n"
                "}")
                self.pushButton_19.setCheckable(True)
                self.pushButton_19.setObjectName("pushButton_19")


                #Back Ground IMG
                self.background_IMG = QtWidgets.QLabel(parent=self.centralwidget)
                self.background_IMG.setGeometry(QtCore.QRect(0, 0, 1101, 791))
                self.background_IMG.setText("")
                self.background_IMG.setPixmap(QtGui.QPixmap("#Need to add photo or find out how to sync"))
                self.background_IMG.setScaledContents(True)
                self.background_IMG.setWordWrap(False)
                self.background_IMG.setObjectName("background_IMG")
                

                




                #Defending Grass 
                self.pushButton_20 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_20.setGeometry(QtCore.QRect(20, 140, 75, 24))
                self.pushButton_20.setStyleSheet("QPushButton {\n"
                "    background-color: green;\n"
                "    color: white;\n"
                "}")
                self.pushButton_20.setCheckable(True)
                self.pushButton_20.setObjectName("pushButton_20")
                


                self.pushButton_21 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_21.setGeometry(QtCore.QRect(310, 230, 75, 24))
                self.pushButton_21.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(255, 103, 235) ;\n"
                "    color: white;\n"
                "}")
                self.pushButton_21.setCheckable(True)
                self.pushButton_21.setObjectName("pushButton_21")
                self.pushButton_22 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_22.setGeometry(QtCore.QRect(320, 140, 75, 24))
                self.pushButton_22.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(255, 93, 12);\n"
                "    color: white;\n"
                "}")
                self.pushButton_22.setCheckable(True)
                self.pushButton_22.setObjectName("pushButton_22")
                self.pushButton_23 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_23.setGeometry(QtCore.QRect(320, 190, 75, 24))
                self.pushButton_23.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(122, 96, 255) ;\n"
                "    color: white;\n"
                "}")
                self.pushButton_23.setCheckable(True)
                self.pushButton_23.setObjectName("pushButton_23")
                self.pushButton_24 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_24.setGeometry(QtCore.QRect(220, 190, 75, 24))
                self.pushButton_24.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(255, 28, 96);\n"
                "    color: white;\n"
                "}")
                self.pushButton_24.setCheckable(True)
                self.pushButton_24.setObjectName("pushButton_24")
                self.pushButton_25 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_25.setGeometry(QtCore.QRect(120, 90, 75, 24))
                self.pushButton_25.setStyleSheet("QPushButton {\n"
                "    background-color: red;\n"
                "    color: white;\n"
                "}")
                self.pushButton_25.setCheckable(True)
                self.pushButton_25.setObjectName("pushButton_25")
                self.pushButton_26 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_26.setGeometry(QtCore.QRect(20, 190, 75, 24))
                self.pushButton_26.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(202, 166, 74) ;\n"
                "    color: white;\n"
                "}")
                self.pushButton_26.setCheckable(True)
                self.pushButton_26.setObjectName("pushButton_26")
                self.pushButton_27 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_27.setGeometry(QtCore.QRect(120, 190, 75, 24))
                self.pushButton_27.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(44, 65, 255);\n"
                "    color: white;\n"
                "}")
                self.pushButton_27.setCheckable(True)
                self.pushButton_27.setObjectName("pushButton_27")
                self.pushButton_28 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_28.setGeometry(QtCore.QRect(420, 90, 75, 24))
                self.pushButton_28.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(255, 222, 58);\n"
                "    color: white;\n"
                "}")
                self.pushButton_28.setCheckable(True)
                self.pushButton_28.setObjectName("pushButton_28")
                self.pushButton_29 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_29.setGeometry(QtCore.QRect(430, 190, 75, 24))
                self.pushButton_29.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(170, 170, 0);\n"
                "    color: white;\n"
                "}")
                self.pushButton_29.setCheckable(True)
                self.pushButton_29.setObjectName("pushButton_29")
                self.pushButton_30 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_30.setGeometry(QtCore.QRect(20, 90, 75, 24))
                self.pushButton_30.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(201, 199, 202);\n"
                "    color: white;\n"
                "}")
                self.pushButton_30.setCheckable(True)
                self.pushButton_30.setObjectName("pushButton_30")
                self.pushButton_31 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_31.setGeometry(QtCore.QRect(320, 90, 75, 24))
                self.pushButton_31.setStyleSheet("QPushButton {\n"
                "    background-color: blue;\n"
                "    color: white;\n"
                "}")
                self.pushButton_31.setCheckable(True)
                self.pushButton_31.setObjectName("pushButton_31")
                self.pushButton_32 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_32.setGeometry(QtCore.QRect(60, 230, 75, 24))
                self.pushButton_32.setStyleSheet("QPushButton {\n"
                "    background-color:    rgb(103, 106, 127)   ;\n"
                "    color: white;\n"
                "}")
                self.pushButton_32.setCheckable(True)
                self.pushButton_32.setObjectName("pushButton_32")
                self.pushButton_33 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_33.setGeometry(QtCore.QRect(180, 230, 75, 24))
                self.pushButton_33.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(134, 67, 0);\n"
                "    color: white;\n"
                "}")
                self.pushButton_33.setCheckable(True)
                self.pushButton_33.setObjectName("pushButton_33")
                self.pushButton_34 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_34.setGeometry(QtCore.QRect(220, 140, 75, 24))
                self.pushButton_34.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(89, 169, 255);\n"
                "    color: white;\n"
                "}")
                self.pushButton_34.setCheckable(True)
                self.pushButton_34.setObjectName("pushButton_34")
                self.pushButton_35 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_35.setGeometry(QtCore.QRect(220, 90, 75, 24))
                self.pushButton_35.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(53, 245, 255);\n"
                "    color: white;\n"
                "}")
                self.pushButton_35.setCheckable(True)
                self.pushButton_35.setObjectName("pushButton_35")
                self.pushButton_36 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_36.setGeometry(QtCore.QRect(120, 140, 75, 24))
                self.pushButton_36.setStyleSheet("QPushButton {\n"
                "    background-color:rgb(202, 142, 21);\n"
                "    color: white;\n"
                "}")
                self.pushButton_36.setCheckable(True)
                self.pushButton_36.setObjectName("pushButton_36")
                self.pushButton_37 = QtWidgets.QPushButton(parent=self.centralwidget)
                self.pushButton_37.setGeometry(QtCore.QRect(420, 140, 75, 24))
                self.pushButton_37.setStyleSheet("QPushButton {\n"
                "    background-color: rgb(160, 28, 255);\n"
                "    color: white;\n"
                "}")
                self.pushButton_37.setCheckable(True)
                self.pushButton_37.setObjectName("pushButton_37")
                self.line = QtWidgets.QFrame(parent=self.centralwidget)
                self.line.setGeometry(QtCore.QRect(523, 0, 20, 471))
                self.line.setFrameShape(QtWidgets.QFrame.Shape.VLine)
                self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
                self.line.setObjectName("line")
                self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
                self.label_2.setGeometry(QtCore.QRect(190, 40, 171, 41))
                self.label_2.setStyleSheet("color: rgb(75, 255, 210);")
                self.label_2.setObjectName("label_2")
                self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
                self.label_3.setGeometry(QtCore.QRect(720, 40, 161, 41))
                self.label_3.setStyleSheet("color: rgb(255, 161, 163);")
                self.label_3.setObjectName("label_3")
                
                self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
                self.label_4.setGeometry(QtCore.QRect(400, 0, 131, 51))
                self.label_4.setStyleSheet("color: rgb(255, 5, 9);")
                self.label_4.setObjectName("label_4")
                
                #Color and output of the Text for defending and combined
                self.defending_text = QtWidgets.QLabel(parent=self.centralwidget)
                self.defending_text.setGeometry(QtCore.QRect(10, 400, 511, 100))
                self.defending_text.setStyleSheet("color: rgb(255, 0, 255); font-size: 27px;")
                self.defending_text.setObjectName("defending_text")
                #Attacking output of text
                self.attacking_text = QtWidgets.QLabel(parent=self.centralwidget)
                self.attacking_text.setGeometry(QtCore.QRect(540, 400, 551, 100))
                self.attacking_text.setStyleSheet("color: rgb(255, 0, 255); font-size: 27px;")
                self.attacking_text.setObjectName("defending_text")
                #After pressing look up Pokemon Type Output
                # self.output_text  = QtWidgets.QLabel(parent=self.centralwidget)
                # self.output_text.setGeometry(QtCore.QRect(80, 610, 931, 100))
                # self.output_text.setStyleSheet("background-color: rgb(186, 178, 171);color: rgb(85, 85, 255); font-size: 30px;")
                # self.output_text.setObjectName("defending_text")

              
                #img boarder testing
                self.output_text = QtWidgets.QLabel(parent=self.centralwidget)
                self.output_text.setGeometry(QtCore.QRect(80, 610, 931, 155))
                self.output_text.setObjectName("defending_text")
                self.output_text.setStyleSheet("border-image: url(#Need to add photo or find out how to sync);color: rgb(85, 85, 255); font-size: 30px;")
                self.output_text.setPixmap(QtGui.QPixmap("#Need to add photo or find out how to sync"))
                self.output_text.setScaledContents(True)
                self.output_text.setWordWrap(False)
                self.output_text.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.OpenHandCursor))
                self.output_text.setMouseTracking(True)
                

                self.background_IMG.raise_()
                self.pushButton.raise_()
                self.pushButton_2.raise_()
                self.pushButton_3.raise_()
                self.pushButton_4.raise_()
                self.pushButton_5.raise_()
                self.pushButton_6.raise_()
                self.pushButton_7.raise_()
                self.pushButton_8.raise_()
                self.pushButton_9.raise_()
                self.pushButton_10.raise_()
                self.pushButton_11.raise_()
                self.pushButton_12.raise_()
                self.pushButton_13.raise_()
                self.pushButton_15.raise_()
                self.pushButton_16.raise_()
                self.pushButton_17.raise_()
                self.pushButton_14.raise_()
                self.pushButton_18.raise_()
                self.pushButton_19.raise_()
                self.pushButton_20.raise_()
                self.pushButton_21.raise_()
                self.pushButton_22.raise_()
                self.pushButton_23.raise_()
                self.pushButton_24.raise_()
                self.pushButton_25.raise_()
                self.pushButton_26.raise_()
                self.pushButton_27.raise_()
                self.pushButton_28.raise_()
                self.pushButton_29.raise_()
                self.pushButton_30.raise_()
                self.pushButton_31.raise_()
                self.pushButton_32.raise_()
                self.pushButton_33.raise_()
                self.pushButton_34.raise_()
                self.pushButton_35.raise_()
                self.pushButton_36.raise_()
                self.pushButton_37.raise_()
                self.line.raise_()
                self.label_2.raise_()
                self.label_3.raise_()
                self.label_4.raise_()
                self.output_text.raise_()
                self.defending_text.raise_()
                self.attacking_text.raise_()
                
                MainWindow.setCentralWidget(self.centralwidget)

                self.retranslateUi(MainWindow)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)
                # self.defending_moves = None
                
                
                #Storing dictionarys and button count
                self.button_click_count = []
                clicked_attack_buttons = {}
                clicked_defending_buttons = {}
                self.clicked_double_typing_buttons = {}

             # Attacking button association
                attack_buttons = {
                "Normal": self.pushButton_2,
                "Fire": self.pushButton_3,
                "Ice": self.pushButton_5,
                "Water": self.pushButton_9,
                "Electric": self.pushButton_4,
                "Grass": self.pushButton_12,
                "Ground": self.pushButton_18,
                "Flying": self.pushButton_17,
                "Fighting": self.pushButton_13,
                "Poison": self.pushButton_7,
                "Rock": self.pushButton_14,
                "Ghost": self.pushButton_10,
                "Psychic": self.pushButton_16,
                "Dragon": self.pushButton_19,
                "Bug": self.pushButton_8,
                "Steel": self.pushButton_6,
                "Dark": self.pushButton_15,
                "Fairy": self.pushButton_11
                }
                
                for attack_type, button in attack_buttons.items():
                        button.setCheckable(True)
                        
                        button.clicked.connect(lambda _, bt=button,at=attack_type: self.pokemon_attackings(clicked_attack_buttons,at,bt))
                        # print("test attacking")
                        
               # Defending button association
                defending_buttons = {
                "Normal": self.pushButton_30,
                "Fire": self.pushButton_25,
                "Ice": self.pushButton_35,
                "Water": self.pushButton_31,
                "Electric": self.pushButton_28,
                "Grass": self.pushButton_20,
                "Ground": self.pushButton_36,
                "Flying": self.pushButton_34,
                "Fighting": self.pushButton_22,
                "Poison": self.pushButton_37,
                "Rock": self.pushButton_26,
                "Ghost": self.pushButton_27,
                "Psychic": self.pushButton_24,
                "Dragon": self.pushButton_23,
                "Bug": self.pushButton_29,
                "Steel": self.pushButton_32,
                "Dark": self.pushButton_33,
                "Fairy": self.pushButton_21
                }
                for defending_moves, button in defending_buttons.items():
                        button.setCheckable(True)
                        
                        button.clicked.connect(lambda _, btn=button,key=defending_moves: self.pokemon_defending(clicked_defending_buttons,key,btn))
                        

        #Calling pokemon Defending Types
        def pokemon_defending(self, button_dict,defending_moves,button):
                #removes Key from the dict if the button isnt clicked
                button_dict[defending_moves] = button  
                if button.isChecked():
                        pass
                       
                else:
                        self.defending_text.setText("")
                        button_dict.pop(defending_moves,None)
                # print("Defending", button_dict)

                #defending keys amd buttons are stored here 
                self.defending_moves = defending_moves
                # print("Defending",defending_moves)
                self.button_dict = button_dict
                
                #Checks to see how many Key-Value pairs are in the dict for buttons and adds a single typing to display
                if len(button_dict) == 1:
                    for defending, attacking in self.pokemon_dict.items():       
                            if defending_moves in defending:
                                    # print("defending")
                                    self.defending_text.setText(f"Defending : {defending_moves} ")
                                    return  # Exit the function if a match is found for the attack_type
                #Checks to see how many Key-Value pairs are in the dict for buttons and then goes through the dict to find the dual typing
                if len(button_dict) == 2:
                    double_move = "/".join(button_dict.keys())
                    self.two_buttons_pressed(double_move)
        #Stores the double typing in a variable and prints the Dual typing its displaying
        def two_buttons_pressed(self,double_move):
                self.double_move = double_move
                
                # print("Executing another function",double_move)
                self.defending_text.setText(f"Defending DualTyping: {double_move}")
  
        #Calls the Attacking types
        def pokemon_attackings(self, button_dict,key,button):
                #removes it from the dict if the button isnt clicked
                button_dict[key] = button
                if button.isChecked():
                        pass
                else:
                        button_dict.pop(key,None)
                        self.attacking_text.setText("")
                self.pokemon_attacking_dict=button_dict
                # print("Attack", button_dict)

                #Attacking key gets stored here
                self.attack_type = key
                # print("Attacking",key)
                if len(button_dict) == 1:
                        for defending_moves, attacking in self.pokemon_dict.items():        
                                if key in attacking:
                                

                                        self.attacking_text.setText(f"Attacking with Type: {key} ")
                                        return  # Exit the function if a match is found for the attack_type

                        self.defending_text.setText("No attacking type found for the given attack type.")
                        # Update the background_IMG with the attacking move information
        
        #Adds the attacking with the defending and displays the Values 
        def lookup_pokemon_types(self):
                self.attacking_text.setText("")
                self.defending_text.setText("")
                try:
                        if len(self.button_dict) == 1:
                                combined = self.pokemon_dict[self.defending_moves][self.attack_type]
                                # print("Defending Output", combined)
                                self.output_text.setText(f"""          Attacking Type: {self.attack_type} vs Defending Type:{self.defending_moves}
                                {combined}""")
                        else:
                                if len(self.button_dict) == 2: 
                                
                                        dual_combined = self.pokemon_dict[self.double_move][self.attack_type]
                                #     print("dual Type output", dual_combined)
                                        self.output_text.setText(f"""          Attacking Type: {self.attack_type} vs Defending Type:{self.double_move}
                                {dual_combined}""")
                except Exception as e:
                        print(e)
                        self.output_text.setText("        No Pokemon Found, Press two typings to get Results")
                       
                       

        def retranslateUi(self, MainWindow):

                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
                self.pushButton.setText(_translate("MainWindow", "Look up Pokemon Type"))
                self.pushButton_2.setText(_translate("MainWindow", "Normal"))
                self.pushButton_3.setText(_translate("MainWindow", "Fire"))
                self.pushButton_4.setText(_translate("MainWindow", "Electric"))
                self.pushButton_5.setText(_translate("MainWindow", "Ice"))
                self.pushButton_6.setText(_translate("MainWindow", "Steel"))
                self.pushButton_7.setText(_translate("MainWindow", "Poison"))
                self.pushButton_8.setText(_translate("MainWindow", "Bug"))
                self.pushButton_9.setText(_translate("MainWindow", "Water"))
                self.pushButton_10.setText(_translate("MainWindow", "Ghost"))
                self.pushButton_11.setText(_translate("MainWindow", "Fairy"))
                self.pushButton_12.setText(_translate("MainWindow", "Grass"))
                self.pushButton_13.setText(_translate("MainWindow", "Fighting"))
                self.pushButton_15.setText(_translate("MainWindow", "Dark"))
                self.pushButton_16.setText(_translate("MainWindow", "Psychic"))
                self.pushButton_17.setText(_translate("MainWindow", "Flying"))
                self.pushButton_14.setText(_translate("MainWindow", "Rock"))
                self.pushButton_18.setText(_translate("MainWindow", "Ground"))
                self.pushButton_19.setText(_translate("MainWindow", "Dragon"))
                self.pushButton_20.setText(_translate("MainWindow", "Grass"))
                self.pushButton_21.setText(_translate("MainWindow", "Fairy"))
                self.pushButton_22.setText(_translate("MainWindow", "Fighting"))
                self.pushButton_23.setText(_translate("MainWindow", "Dragon"))
                self.pushButton_24.setText(_translate("MainWindow", "Psychic"))
                self.pushButton_25.setText(_translate("MainWindow", "Fire"))
                self.pushButton_26.setText(_translate("MainWindow", "Rock"))
                self.pushButton_27.setText(_translate("MainWindow", "Ghost"))
                self.pushButton_28.setText(_translate("MainWindow", "Electric"))
                self.pushButton_29.setText(_translate("MainWindow", "Bug"))
                self.pushButton_30.setText(_translate("MainWindow", "Normal"))
                self.pushButton_31.setText(_translate("MainWindow", "Water"))
                self.pushButton_32.setText(_translate("MainWindow", "Steel"))
                self.pushButton_33.setText(_translate("MainWindow", "Dark"))
                self.pushButton_34.setText(_translate("MainWindow", "Flying"))
                self.pushButton_35.setText(_translate("MainWindow", "Ice"))
                self.pushButton_36.setText(_translate("MainWindow", "Ground"))
                self.pushButton_37.setText(_translate("MainWindow", "Poison"))
                self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:700; font-style:italic; text-decoration: underline;\">Defending Types</span></p></body></html>"))
                self.label_3.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:700; font-style:italic; text-decoration: underline;\">Attacking Move</span></p></body></html>"))
                self.label_4.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:700; font-style:italic; text-decoration: underline;\">Press 2 For Dual Types</span></p></body></html>"))
                self.output_text.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:40pt; font-weight:700; font-style:italic; text-decoration:\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Results Here</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
